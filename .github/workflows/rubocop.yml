name: "Rubocop"

on: [push, pull_request]

jobs:
  rubocop:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # If running on a self-hosted runner, check it meets the requirements
    # listed at https://github.com/ruby/setup-ruby#using-self-hosted-runners
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1

    # This step is not necessary if you add the gem to your Gemfile
    - name: Install Code Scanning integration
      run: bundle add code-scanning-rubocop --version 0.5.0 --skip-install

    - name: Setup Bundler cache
      uses: actions/cache@v3
      with:
        path: vendor/bundle
        key: bundle-use-ruby-Linux-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          bundle-use-ruby-Linux-

    - name: Install gems with Bundler
      run: |
        bundle config deployment true
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3

    - name: Rubocop run
      run: |
        bash -c "
          bundle exec rubocop --require code_scanning --format CodeScanning::SarifFormatter -o tmp/rubocop.sarif
          [[ $? -ne 2 ]]
        "

    - name: Upload Sarif output
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: tmp/rubocop.sarif
